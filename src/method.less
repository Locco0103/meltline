/*
 * method
 */
.for(@list, @code) {
  & {
    .loop(@i:0) when (@i < length(@list)) {
      @value: extract(@list, @i+1);
      @code();
      .loop(@i + 1);
    }

    .loop();
  }
}

.vendor(@property, @value) {
  -webkit-@{property}: @value;
   // -khtml-@{property}: @value;
     -moz-@{property}: @value;
          @{property}: @value;
}

.define-color(@key, @value) {
  .@{key} {
    color: @value;
  }
  .text-@{key} {
    color: @value;
  }
  .bg-@{key} {
    background-color: @value;
  }
  .border-@{key} {
    border-color: @value;
  }
}

.define-color-grad(@key, @angle, @a, @b) {
  .@{key} {
    background-image: -webkit-linear-gradient(@a, @b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .text-@{key} {
    background-image: -webkit-linear-gradient(@a, @b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .bg-@{key} {
    background-image: linear-gradient(@angle, @a 0%, @b 100%);
  }
  .border-@{key} {
    border-color: @a;
  }
}
